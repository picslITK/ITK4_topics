<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Change SYSTEM "http://ij.itk.org/itkfaq/ITKMigration.dtd">
<!--**
**
** PolygonGroupOrientationMovedToPolygonSpatialObject.xml
**
** >>>>>>>>>>>>>>>>>>>>>>>>>>>>
** THIS FILE HAS BEEN AUTOMATICALLY GENERATED. EDIT IT BEFORE COMMITING
** <<<<<<<<<<<<<<<<<<<<<<<<<<<
**
**-->
<Change>
    <!--**
    ** Title for the online migration page
    **-->
    <Title>
      PolygonGroupOrientation Moved To PolygonSpatialObject
    </Title>

    <!--**
    ** The author of the change
    **-->
    <Author>
      GaÃ«tan Lehmann
    </Author>

    <!--**
    ** Date of creation for the XML document
    **-->
    <Date>
      2011-03-01
    </Date>

    <!--**
    ** Plain text description of the change
    ** Extracted from git commit messages
    **-->
    <Description>
      The enum itk::PolygonGroupOrientation, which was used only in itk::PolygonSpatialObject,
      has been moved in itk::PolygonSpatialObject.

      Wrapping an enum nested in a namespace and not in a class is quite
      difficult with the current wrapping system. It leads to using a &quot;using
      namespace ::itk&quot; which introduce some ambiguities in the definition of
      some types, like uintptr_t. msvc8 generates a build error in that case.
      As a consequence, enum directly in the itk namespace should be avoided.
      Enums inside a class and enums inside their own namespace are OK.

    </Description>

    <!--**
    ** Sample code snippets
    ** Extracted from git diff of changed files in Examples and Testing
    **-->
    <SampleCode>
      <Old>
        #include &quot;itkPolygonGroupOrientation.h&quot;
      </Old>

      <New>
      </New>

    </SampleCode>

    <!--**
    ** The change-ids for all commits in the topic branch
    **-->
    <Gerrit-ChangeId>
      I3671478e408d3c40dea3bc9f62247c72157b181e
    </Gerrit-ChangeId>

    <!--**
    ** List of all changed files from the topic branch
    **-->
    <FileList>
      Code/SpatialObject/itkPolygonGroupOrientation.h
      Code/SpatialObject/itkPolygonSpatialObject.h
      Code/SpatialObject/itkPolygonSpatialObject.txx
      Testing/Code/SpatialObject/itkSpatialObjectHeaderTest.cxx
      Wrapping/WrapITK/Libraries/SpatialObject/itkPolygonGroupOrientation.wrap
    </FileList>

    <!--**
    ** If the migration can be accomplished by a simple string
    ** substitution, then use the following construct to define
    ** the substitution rule.
    **
    ** <MigrationFix-Automatic>
    **   <Old>
    **     MipsleledName
    **   </Old>
    **   <New>
    **     MisspelledName
    **   </New>
    ** </MigrationFix-Automatic>
    **-->

    <!--**
    ** If the migration can NOT be accomplished by a simple string
    ** substitution, but potential problem spots can be identified,
    ** use the following construct to define a migration flag rule.
    **
    ** <MigrationFix-Manual>
    **   OldFunctionName
    ** </MigrationFix-Manual>
    **-->

</Change>
