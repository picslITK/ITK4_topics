set(WRAPPER_AUTO_INCLUDE_HEADERS OFF)

WRAP_INCLUDE("itkQuadEdgeMesh.h")
WRAP_INCLUDE("itkQuadEdgeMeshParamMatrixCoefficients.h")

# for the time being this filter is only wrapped for 3D
FILTER_DIMS(d3 3)
if(d3)

    WRAP_CLASS("itk::MatrixCoefficients")
      WRAP_TEMPLATE("QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >")
    END_WRAP_CLASS()

    WRAP_CLASS("itk::OnesMatrixCoefficients")
      WRAP_TEMPLATE("QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >")
    END_WRAP_CLASS()

    WRAP_CLASS("itk::InverseEuclideanDistanceMatrixCoefficients")
      WRAP_TEMPLATE("QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >")
    END_WRAP_CLASS()

    WRAP_CLASS("itk::ConformalMatrixCoefficients")
      WRAP_TEMPLATE("QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >")
    END_WRAP_CLASS()

    WRAP_CLASS("itk::AuthalicMatrixCoefficients")
      WRAP_TEMPLATE("QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >")
    END_WRAP_CLASS()

    WRAP_CLASS("itk::IntrinsicMatrixCoefficients")
      WRAP_TEMPLATE("QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >")
    END_WRAP_CLASS()

    WRAP_CLASS("itk::HarmonicMatrixCoefficients")
      WRAP_TEMPLATE("QEM${ITKM_D}3" "itk::QuadEdgeMesh< ${ITKT_D},3 >")
    END_WRAP_CLASS()

endif(d3)
